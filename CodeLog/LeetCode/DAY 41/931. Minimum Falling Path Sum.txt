//Link to the Question (https://leetcode.com/problems/minimum-falling-path-sum/submissions/1150713109/?envType=daily-question&envId=2024-01-19)

class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n = matrix.size();
        if (n == 1) {
            return matrix[0][0];
        }
        for (int i = 1; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                matrix[i][j] += std::min({
                    (j > 0) ? matrix[i - 1][j - 1] : INT_MAX,
                    matrix[i - 1][j],
                    (j < n - 1) ? matrix[i - 1][j + 1] : INT_MAX
                });
            }
        }
        return *min_element(matrix[n - 1].begin(), matrix[n - 1].end());
    }
};